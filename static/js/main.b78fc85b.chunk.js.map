{"version":3,"sources":["Api.js","NavBar.js","Menu.js","Home.js","Item.js","NotFound.js","AddForm.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["BASE_API_URL","SnackOrBoozeApi","axios","get","result","data","type","post","NavBar","expand","exact","to","className","navbar","Menu","text","items","title","map","item","toLowerCase","id","name","Home","Item","cantFind","useParams","find","i","description","recipe","serve","NotFound","AddForm","add","defaultData","useState","formData","setFormData","valid","setValid","history","useHistory","evt","a","preventDefault","validate","undefined","push","handleChange","target","value","d","v","Object","values","includes","onSubmit","for","onChange","style","color","Routes","snacks","drinks","path","App","isLoading","setIsLoading","setSnacks","setDrinks","useEffect","getSnacks","getDrinks","getAllItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b78fc85b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_API_URL = \"https://my-json-server.typicode.com/chasewestover/SocialGrove-backend\";\n\n/* \n  json-server will give you CRUD endpoints on snacks and drinks.\n  Here we've provided you with a single action to get all drinks.\n\n  You'll need to add to this class as you build features for the app.\n*/\n\nclass SnackOrBoozeApi {\n\n  //gets all snacks\n  static async getSnacks() {\n    const result = await axios.get(`${BASE_API_URL}/snacks`);\n    return result.data;\n  }\n\n  //gets all drinks\n  static async getDrinks() {\n    const result = await axios.get(`${BASE_API_URL}/drinks`);\n    return result.data;\n  }\n\n  //post request to add a resource, returns the newly added resource\n  static async add(type, data) {\n    const result = await axios.post(`${BASE_API_URL}/${type}s`, data);\n    return result.data;\n  }\n\n}\n\nexport default SnackOrBoozeApi;\n","import React from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\n\n//navbar component\nfunction NavBar() {\n  return (\n    <div>\n      <Navbar expand=\"md\">\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\n          Snack or Booze\n        </NavLink>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink to=\"/drinks\">Drinks</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/snacks\">Snacks</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink to=\"/add\">Add</NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./FoodMenu.css\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  ListGroup,\n  ListGroupItem\n} from \"reactstrap\";\n\n//menu component\nfunction Menu({ text, items, title }) {\n  \n  return (\n    <section className=\"col-md-4\">\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">{title}</CardTitle>\n          <CardText>{text}</CardText>\n          <ListGroup>\n            {items.map(item => (\n              <Link to={`/${title.toLowerCase()}/${item.id}`} key={item.id}>\n                <ListGroupItem>{item.name}</ListGroupItem>\n              </Link>\n            ))}\n          </ListGroup>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\n\n//home component\nfunction Home() {\n  return (\n    <section className=\"col-md-8\">\n      <Card>\n        <CardBody className=\"text-center\">\n          <h3 className=\"font-weight-bold\">\n            Welcome to Silicon Valley's premier dive cafe!\n          </h3>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nfunction Item({ items, cantFind }) {\n  const { id } = useParams();\n\n  let item = items.find(i => i.id === id);\n  if (!item) return <Redirect to={cantFind} />;\n\n  return (\n    <section>\n      <Card>\n        <CardBody>\n          <CardTitle className=\"font-weight-bold text-center\">\n            {item.name}\n          </CardTitle>\n          <CardText className=\"font-italic\">{item.description}</CardText>\n          <p>\n            <b>Recipe:</b> {item.recipe}\n          </p>\n          <p>\n            <b>Serve:</b> {item.serve}\n          </p>\n        </CardBody>\n      </Card>\n    </section>\n  );\n}\n\nexport default Item;\n","import React from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\n\n//not found component\nfunction NotFound() {\n  return (\n    <Card>\n      <CardBody>\n        <h2>Sorry, we couldn't find that</h2>\n      </CardBody>\n    </Card>\n  );\n}\nexport default NotFound;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Card, CardBody, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport SnackOrBoozeApi from \"./Api\";\n\n//form for adding an item\nfunction AddForm({ add, defaultData = { type: \"snack\", name: \"\", description: \"\", recipe: \"\", serve: \"\" } }) {\n  const [formData, setFormData] = useState(defaultData);\n  const [valid, setValid] = useState(true);\n  const history = useHistory();\n\n  //on form submit, validate data. If valid, add the snack/drink and redirect to snacks/drinks page\n  async function handleSubmit(evt) {               \n    evt.preventDefault();                                    //       ¯\\_(ツ)_/¯\n    validate(); //why is my validation not updating 'valid' before the conditional? I thought the arrow function on line 27 would force this\n    if (valid) {  //I've also used this pattern before with no issues so I'm a bit stumped \n      let result = await SnackOrBoozeApi.add(formData.type, { ...formData, type: undefined });\n      add(formData.type, result);\n      history.push(`/${formData.type}s`)\n    }\n  }\n\n  //update form data on change\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(d => ({ ...d, [name]: value }));\n  }\n\n  //validate all inputs non-empty\n  function validate() {\n    setValid(v => !Object.values(formData).includes(\"\"));\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <h4>Create a new snack or drink!</h4>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"type\">Select</Label>\n            <Input onChange={handleChange} type=\"select\" name=\"type\" value={formData.type}>\n              <option>snack</option>\n              <option>drink</option>\n            </Input>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input onChange={handleChange} type=\"text\" name=\"name\" value={formData.name} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input onChange={handleChange} type=\"text\" name=\"description\" value={formData.description} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"recipe\">Recipe</Label>\n            <Input onChange={handleChange} type=\"text\" name=\"recipe\" value={formData.recipe} />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"serve\">Serve</Label>\n            <Input onChange={handleChange} type=\"text\" name=\"serve\" value={formData.serve} />\n          </FormGroup>\n          <Button type=\"submit\">Submit</Button>\n          {!valid && <p style={{color: \"red\"}}>Please fill all inputs</p>}\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\nexport default AddForm;","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport Menu from \"./Menu\";\nimport Home from \"./Home\";\nimport Item from \"./Item\";\nimport NotFound from \"./NotFound\";\nimport AddForm from \"./AddForm\";\n\n//routes component\nfunction Routes({snacks, drinks, add}) {\n  const snackText = \"Oh yes, step right up and sample these um tasty snacks that are so tasty and delightful\"\n  const drinkText = \"Uhoh! We got drinks, yes we do!! We got drunk how bout you?!?\"\n  return (\n    <Switch>\n      <Route exact path=\"/\"><Home snacks={snacks} /></Route>\n      <Route exact path=\"/snacks\"><Menu text={snackText} items={snacks} title=\"Snacks\" /></Route>\n      <Route path=\"/snacks/:id\"><Item items={snacks} cantFind=\"/snacks\" /></Route>\n      <Route exact path=\"/drinks\"><Menu text={drinkText} items={drinks} title=\"Drinks\" /></Route>\n      <Route path=\"/drinks/:id\"><Item items={drinks} cantFind=\"/drinks\" /></Route>\n      <Route path=\"/add\"><AddForm add={add} /></Route>\n      <Route exact path=\"/404\"><NotFound/></Route>\n      <Route><Redirect to='/404'/></Route>\n    </Switch>\n  );\n}\nexport default Routes;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport SnackOrBoozeApi from \"./Api\";\nimport NavBar from \"./NavBar\";\nimport Routes from \"./Routes\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [snacks, setSnacks] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  //function for adding new drink/snack to state\n  function add(type, item) {\n    switch (type) {\n      case 'snack':\n        setSnacks(snacks => [...snacks, item]);\n        break;\n      case 'snack':\n        setDrinks(snacks => [...snacks, item]);\n    }\n  }\n\n  //loads snacks and drinks from the API on initial render\n  useEffect(() => {\n    async function getAllItems() {\n      let snacks = await SnackOrBoozeApi.getSnacks();\n      let drinks = await SnackOrBoozeApi.getDrinks();\n      setSnacks(snacks);\n      setDrinks(drinks);\n      setIsLoading(false);\n    }\n    getAllItems();\n  }, []);\n\n  \n  if (isLoading) {\n    return <p>Loading &hellip;</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <main>\n          <Routes add={add} snacks={snacks} drinks={drinks} />\n        </main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}